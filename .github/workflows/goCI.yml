name: CI setup for Go #Name of the workflow
on: #On event keyword
  push:
    branches: [main] #Identifying branch
    
jobs: #Job to execute on event
  my-job:
    name: My Job
    runs-on: ubuntu-16.04 #Specify OS in virtual machine
    steps:
    - name: Print a greeting
      run: |
        ls
        echo Hello there! #run terminal command
    
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        # The Go version to download (if necessary) and use. Supports semver spec and ranges.
        go-version: 1.16.5 # optional
    - name: Show Go version #Verify that go is installed
      run: go version #Show Go version
      
    - name: Checkout our codes #Bring repo code to virtual environment
      uses: actions/checkout@v2
      
    - name: Check file system #Check virtual environment has my files
      run: |
        ls
        cat calc.go #Prints the content of calc.go
    
    - name: Checkout private repo remotely
      uses: actions/checkout@v2
      with:
        repository: lowkh2/GoSchoolRemoteExample #The hidden repo I am trying to access
        path: virtualRepoFolder #Folder to save to in my virtual env
        token: ${{ secrets.GO_SECRET_DEMO }}
    
    - name: Show hidden files
      run: |
        cd virtualRepoFolder #To access folder of interest in my virtual env
        ls
        cat myText.txt #Show content of the file of interest
        cd ..
    
    - name: Install depencencies for GO
      run: |
        go mod init GoCICDDemo
        go get github.com/tebeka/go2xunit #Adds package for conversion
        go mod tidy
        go test -v #Commands to run go test
        go test -v | go2xunit > report.xml #Run test again and output as report.xml (to show the effect)
        ls #Verify that the report is indeed created
    
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1 #Checkout Unit Test Report Action
      if: always() #Always do it
      with:
        files: report.xml #Make use of a file we created
    
    - if: ${{ success() }}
      name: Create Upload Directiory
      run: mkdir upload
      
    - name: Prepare Documents
      run: mv report.xml ./upload
      
    - name: Prepare Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: assetDocuments
        path: upload
      
    - name: Download Content
      uses: actions/download-artifact@v2
      with:
        name: assestDocuments
      
    - if: ${{ failure() }}
      name: Create Issues Notification
      uses: nashmaniac/create-issue-action@v1.1
      with:
        title: Build Failed
        token: ${{secrets.GITHUB_TOKEN}}
        assignees: ${{github.actor}}
        labels: workflow-failed
        body: Workflow failed for commit ${{github.sha}}
